<p>The Enhanced Character Separated Values format was developed within
the <a href="https://www.astropy.org/">Astropy</a> project
and is described in Astropy
<a href="https://github.com/astropy/astropy-APEs/blob/master/APE6.rst">APE6</a>
(<a href="https://doi.org/10.5281/zenodo.4792325">DOI</a>).
It is composed of a YAML header followed by a CSV-like body,
and is intended to be a human-readable and maybe even human-writable format
with rich metadata.
Most of the useful per-column and per-table metadata
is preserved when de/serializing to this format.
The version supported by this reader is currently ECSV 1.0.
</p>

<p>There are various ways to format the YAML header,
but a simple example of an ECSV file looks like this:
<pre>
# %ECSV 1.0
# ---
# delimiter: ','
# datatype: [
#   { name: index,   datatype: int32   },
#   { name: Species, datatype: string  },
#   { name: Name,    datatype: string  },
#   { name: Legs,    datatype: int32   },
#   { name: Height,  datatype: float64, unit: m },
#   { name: Mammal,  datatype: bool    },
# ]
index,Species,Name,Legs,Height,Mammal
1,pig,Bland,4,,True
2,cow,Daisy,4,2,True
3,goldfish,Dobbin,,0.05,False
4,ant,,6,0.001,False
5,ant,,6,0.001,False
6,human,Mark,2,1.9,True
</pre>
If you follow this pattern, it's possible to write your own ECSV files by
taking an existing CSV file
and decorating it with a header that gives column datatypes,
and possibly other metadata such as units.
This allows you to force the datatype of given columns
(the CSV reader guesses datatype based on content, but can get it wrong)
and it can also be read much more efficiently than a CSV file
and its format can be detected automatically.
</p>

<p>The header information can be provided either in the ECSV file itself,
or alongside a plain CSV file from a separate source
referenced using the <code>header</code> configuration option.
In Gaia EDR3 for instance, the ECSV headers are supplied alongside
the CSV files available for raw download of all tables in the
Gaia source catalogue, so e.g. STILTS can read
one of the gaia_source CSV files with full metadata
as follows:
<pre>
   stilts tpipe
      ifmt='ecsv(header=http://cdn.gea.esac.esa.int/Gaia/gedr3/ECSV_headers/gaia_source.header)'
      in=http://cdn.gea.esac.esa.int/Gaia/gedr3/gaia_source/GaiaSource_000000-003111.csv.gz
</pre>
</p>

<p>The ECSV datatypes that work well with this reader are
<code>bool</code>,
<code>int8</code>, <code>int16</code>, <code>int32</code>, <code>int64</code>,
<code>float32</code>, <code>float64</code>
and
<code>string</code>.
Array-valued columns are also supported with some restrictions.
Following the ECSV 1.0 specification,
columns representing arrays of the supported datatypes can be read,
as columns with <code>datatype: string</code> and a suitable
<code>subtype</code>, e.g.
"<code>int32[&lt;dims&gt;]</code>" or "<code>float64[&lt;dims&gt;]</code>".
Fixed-length arrays (e.g. <code>subtype: int32[3,10]</code>)
and 1-dimensional variable-length arrays
(e.g. <code>subtype: float64[null]</code>) are supported;
however variable-length arrays with more than one dimension
(e.g. <code>subtype: int32[4,null]</code>) cannot be represented,
and are read in as string values.
Null elements of array-valued cells are not supported;
they are read as NaNs for floating point data, and as zero/false for
integer/boolean data.
ECSV 1.0, required to work with array-valued columns,
is supported by Astropy v4.3 and later.
</p>
